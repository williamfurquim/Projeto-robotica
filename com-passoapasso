#include <WiFi.h>

// ========== CONFIG WI-FI ==========
const char* ssid = "WAM";
const char* password = "12345678";

WiFiServer server(80);
String header;

// ========== GPIO - SAÍDAS ==========
const int saidas[] = {23, 22, 21, 19, 18, 17, 16, 4};
String nomes[] = {"D23", "D22", "D21", "D19", "D18", "TX2", "RX2", "D4"};
bool estados[8] = {false, false, false, false, false, false, false, false};

// Textos para aparecer acima dos botões (ordem conforme os primeiros 5 pinos usados)
String textos[] = {"AVANÇO", "RECUO", "MAGAZINE", "VÁCUO", "SOLTAR PEÇA"};

void setup() {
  Serial.begin(115200);

  for (int i = 0; i < 8; i++) {
    pinMode(saidas[i], OUTPUT);
    digitalWrite(saidas[i], LOW);
  }

  WiFi.softAP(ssid, password);
  Serial.println("Wi-Fi conectado.");
  Serial.println(WiFi.softAPIP());

  server.begin();
}

void loop() {
  WiFiClient client = server.available();

  if (client) {
    String currentLine = "";
    String header = "";

    unsigned long startTime = 0;
    unsigned long endTime = 0;
    bool processoExecutado = false;

    while (client.connected()) {
      if (client.available()) {
        char c = client.read();
        header += c;

        if (c == '\n') {
          if (currentLine.length() == 0) {
            if (header.indexOf("GET /processo") >= 0) {
              startTime = millis();

              // PROCESSO AUTOMÁTICO COM STATUS NA TELA
              client.println("HTTP/1.1 200 OK");
              client.println("Content-type:text/html\r\n");

              client.println("<!DOCTYPE html><html lang=\"pt-br\"><head><meta charset=\"UTF-8\">");
              client.println("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
              client.println("<title>Robótica - Processo</title>");
              client.println("<style>body{font-family:sans-serif;background:#1e1e2f;color:white;text-align:center;padding-top:40px}h1{font-size:30px}#statusProcesso{margin-top:30px;font-size:24px;font-weight:bold}</style>");
              client.println("</head><body>");
              client.println("<h1>Executando processo automático...</h1>");
              client.println("<div id='statusProcesso'>Iniciando...</div>");
              client.println("</body></html>");

              client.flush(); // envia logo o conteúdo antes dos delays

              // Etapas do processo com status
              client.println("<script>document.getElementById('statusProcesso').innerText = 'Ligando MAGAZINE...';</script>");
              digitalWrite(saidas[2], HIGH); estados[2] = true;
              delay(1000);
              digitalWrite(saidas[2], LOW); estados[2] = false;

              client.println("<script>document.getElementById('statusProcesso').innerText = 'Ligando AVANÇO...';</script>");
              digitalWrite(saidas[0], HIGH); estados[0] = true;
              delay(3000);

              client.println("<script>document.getElementById('statusProcesso').innerText = 'Ativando VÁCUO...';</script>");
              digitalWrite(saidas[3], HIGH); estados[3] = true;

              client.println("<script>document.getElementById('statusProcesso').innerText = 'Desligando AVANÇO...';</script>");
              digitalWrite(saidas[0], LOW); estados[0] = false;
              delay(1000);

              client.println("<script>document.getElementById('statusProcesso').innerText = 'Ligando RECUO...';</script>");
              digitalWrite(saidas[1], HIGH); estados[1] = true;
              delay(3000);

              client.println("<script>document.getElementById('statusProcesso').innerText = 'Soltando a peça...';</script>");
              digitalWrite(saidas[4], HIGH); estados[4] = true;
              delay(200);
              digitalWrite(saidas[4], LOW); estados[4] = false;

              client.println("<script>document.getElementById('statusProcesso').innerText = 'Desligando VÁCUO...';</script>");
              digitalWrite(saidas[3], LOW); estados[3] = false;

              client.println("<script>document.getElementById('statusProcesso').innerText = 'Avançando novamente...';</script>");
              digitalWrite(saidas[0], HIGH); estados[0] = true;
              delay(1000);

              client.println("<script>document.getElementById('statusProcesso').innerText = 'Desligando RECUO...';</script>");
              digitalWrite(saidas[1], LOW); estados[1] = false;

              client.println("<script>document.getElementById('statusProcesso').innerText = 'Processo finalizado.';</script>");
              endTime = millis();
              processoExecutado = true;
              delay(500);
              client.printf("<script>document.getElementById('statusProcesso').innerText += '\\nTempo total: %.2f segundos.';</script>", (endTime - startTime) / 1000.0);
              delay(2000);
              client.println("<script>setTimeout(()=>{window.location.href='/'}, 4000);</script>");
              break;

            } else {
              // COMANDOS MANUAIS
              for (int i = 0; i < 8; i++) {
                String onCmd = "GET /" + nomes[i] + "/on";
                String offCmd = "GET /" + nomes[i] + "/off";
                if (header.indexOf(onCmd) >= 0) {
                  digitalWrite(saidas[i], HIGH); estados[i] = true;
                } else if (header.indexOf(offCmd) >= 0) {
                  digitalWrite(saidas[i], LOW); estados[i] = false;
                }
              }
            }

            // INTERFACE MANUAL PADRÃO
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html\r\n");

            client.println("<!DOCTYPE html><html lang=\"pt-br\"><head><meta charset=\"UTF-8\">");
            client.println("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
            client.println("<title>Robótica - Controle Manual</title>");
            client.println("<style>");
            client.println("@import url('https://fonts.googleapis.com/css2?family=Figtree&display=swap');");
            client.println("* { padding: 0; margin: 0; box-sizing: border-box; font-family: 'Figtree', sans-serif; }");
            client.println("body { background: linear-gradient(#189ad6, #353ea6); color: rgb(219, 217, 217); min-height: 100vh; }");
            client.println("main { max-width: 900px; margin: 30px auto; padding: 20px; }");
            client.println("h2 { font-size: 58px; font-weight: bold; text-shadow: 1px 3px 3px black; text-align: center; margin-bottom: 40px; }");
            client.println(".saidas { display: flex; flex-direction: column; align-items: center; gap: 30px; }");
            client.println("button { padding: 16px 40px; border-radius: 10px; border: none; cursor: pointer; font-weight: bold; transition: 0.3s; font-size: 20px; }");
            client.println("button:hover { background-color: #3909cc; color: white; transform: scale(1.1); }");
            client.println(".btn-on { background-color: #28a745; color: white; }");
            client.println(".btn-off { background-color: #dc3545; color: white; }");
            client.println(".btn-auto { background-color: #ff9800; color: black; margin-top: 40px; }");
            client.println("a { text-decoration: none; display: flex; flex-direction: column; align-items: center; margin-bottom: 10px; }");
            client.println(".btn-text { color: rgb(219, 217, 217); font-weight: bold; font-size: 22px; margin-bottom: 5px; text-shadow: 1px 3px 5px black; }");
            client.println("#tempoProcesso { margin-top: 30px; font-size: 24px; font-weight: bold; text-align: center; }");
            client.println("</style>");
            client.println("</head><body><main>");
            client.println("<h2>Controle Manual das Saídas</h2>");

            client.println("<div class='saidas'>");
            for (int i = 0; i < 5; i++) {
              client.println("<a href='/" + nomes[i] + (estados[i] ? "/off" : "/on") + "'>");
              client.println("<div class='btn-text'>" + textos[i] + "</div>");
              client.println("<button class='" + String(estados[i] ? "btn-off" : "btn-on") + "'>" + (estados[i] ? "DESLIGAR " : "LIGAR ") + nomes[i] + "</button>");
              client.println("</a>");
            }
            client.println("</div>");
            client.println("<div style='text-align:center;'>");
            client.println("<a href='/processo'><button class='btn-auto'>Processo Automático</button></a>");
            client.println("</div>");
            client.println("<div id='statusProcesso'></div>");
            client.println("</main></body></html>");
            break;
          } else {
            currentLine = "";
          }
        } else if (c != '\r') {
          currentLine += c;
        }
      }
    }
    client.stop();
  }
}
